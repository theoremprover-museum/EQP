assign(max_mem, 24000).
assign(max_seconds, 1800).

clear(print_kept).
clear(print_new_demod).
clear(print_back_demod).
clear(print_given).

set(para_pairs).  % delete for given algorithm

set(basic_paramod).
set(functional_subsume).
set(prime_paramod).
assign(ac_superset_limit, 0).

assign(pick_given_ratio, 4).
%%%%%%%%%%%%%%%%%%%%%%
op(400, xfx, [*,+,^,v,/,\,#]).  % infix operators
op(300, yf, @).                 % postfix operator

assoc_comm(+).
assoc_comm(*).

assign(max_weight, 23).

end_of_commands.

list(sos).

y + (x * (y * z)) = y.         % L1
((x * y) + (y * z)) + y = y.   % L3
(x + y) * (x + y@) = x.        % B1

y * (x + (y + z)) = y.         % L2
((x + y) * (y + z)) * y = y.   % L4
(x * y) + (x * y@) = x.        % B2

% lemmas

% x + y = y + x.                % commutativity
% x * y = y * x.                % commutativity
% (x + y) + z = x + (y + z).    % associativity
% (x * y) * z = x * (y * z).    % associativity

% (A * B) + (A * C) != A * (B + C) | (A + B) * B != B | B + B@ != A + A@.
(A * B) + (A * C) != A * (B + C).
end_of_list.
